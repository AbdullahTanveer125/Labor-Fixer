// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  phone        String
  password     String
  profileImage String?
  employee     EmployeeUser?
  client       ClientUser?
}

model EmployeeUser {
  id                      Int       @id @default(autoincrement())
  userId                  Int       @unique
  user                    User      @relation(fields: [userId], references: [id])
  gender                  String
  dateOfBirth             DateTime
  address                 String
  jobCategory             String[]
  availability            String
  hourlyRate              Float
  description             String
  emailVerified           Boolean   @default(false)
  verificationCode        String?
  verificationCodeExpires DateTime?
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
}

model ClientUser {
  id                      Int       @id @default(autoincrement())
  userId                  Int       @unique
  user                    User      @relation(fields: [userId], references: [id])
  gender                  String
  address                 String
  description             String
  emailVerified           Boolean   @default(false)
  verificationCode        String?
  verificationCodeExpires DateTime?
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt

  // ðŸ”— Relation to Jobs
  jobs                    Job[]     // One ClientUser has many jobs
}

model Job {
  id          Int         @id @default(autoincrement())
  title       String
  category    String
  type        String
  description String
  location    String?
  attachment  String?     // file path or URL
  createdAt   DateTime    @default(now())

  // ðŸ”¹ NOW required
  clientId    Int
  client      ClientUser @relation(fields: [clientId], references: [id])
}
